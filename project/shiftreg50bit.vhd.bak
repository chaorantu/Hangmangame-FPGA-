LIBRARY ieee ;
USE ieee.std_logic_1164.all ;
use ieee.std_logic_unsigned.all;
entity shiftreg50bit is 
   port( clk, clrb,find,insert,push,clear:in std_logic;
         sil,sir,sil0,sir0,guess,input:in std_logic_vector(4 downto 0);
	 q,q0:out std_logic_vector(49 downto 0);
         hitnum:out std_logic_vector(3 downto 0):="0000";
         finish,fail:out std_logic:='0');
	
end shiftreg50bit;

ARCHITECTURE rtl OF shiftreg50bit IS

signal regval,regval0: std_logic_vector(49 downto 0);
signal count:integer :=0;
signal hit:std_logic_vector(3 downto 0):="0000";
BEGIN 
 process(clk,push ,clrb)
  begin
   if (clrb = '0')then 
	 regval  <= "00000000000000000000000000000000000000000000000000";
         regval0 <= "00000000000000000000000000000000000000000000000000";
   elsif(clear='1')then
         finish<='0';
         count<=0;
         fail<='0';
    elsif(find='1') then
           if(clk'event and clk ='1')then
           if(count=10) then
           finish<='1';
           else
           count<=count+1;
           if(guess=sir) then 
           regval0(4 downto 0)<=sir;
           regval(4 downto 0)<="00000";
           hit<=hit+'1';
           fail<='1';
           end if;
           regval <= sir & regval (49 downto 5);
           regval0 <= sir0 & regval0 (49 downto 5);
           end if;
           end if;
    elsif(insert='1') then
          if(push'event and push ='1')then
          regval(4 downto 0)<=input;
          regval<=regval(44 downto 0)& sil;
          end if;
   end if;
 end process ;
q <= regval ;
q0<= regval0;
hitnum<=hit;
END rtl ;
